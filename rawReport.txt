Section x - Methodology / Implemented work

1. Quicksort

How is it implemented?
i. Accepting input
ii. Repeated clicking on divide and conquer along with/or once click on solve until final result is achieved. 

The user is given the liberty to input the numbers. They can input as many numbers as needed and click 'Insert' button or press 'Enter/Return'. The numbers can either be either comma separated or space separated. On entering the numbers, grey rectangular bars are displayed on the screen whose height is equal to the value of the numbers. Once the user has entered all the numbers, they have two options - 'Divide' or 'Solve'. Clicking on 'Solve' will instantly display the final sorted array. However, if the user clicks on 'Divide', then the algorithm initially picks a pivot element using the 'Median of 3' approach. In this approach, the first, middle and the last element are placed in the sorted order and the median element is chosen. This becomes the pivot element to sort the array. The numbers of the arrays are then rearranged in such a way that all the numbers that are smaller than the pivot are placed on the left side of pivot and all numbers larger than the pivot are placed on the right side of pivot. After this, another set of bars are drawn based on the new arrangement of numbers but the pivot element is shaded with a different colour and placed with a slighly larger gap from all other elements. The colour of the pivot elements are based on the level of partition (level 0 - red, level 1 - blue, level 2 - green, level 3 - orange, level 4 - brown, level 5 - violet, level 6 - greenyellow). Level simply means how deep the partitions are made. For example, when the user clicks 'Divide' for the first time, it is called level 0, next click of 'Divide' is called level 1 and so on. Once a new set of bars are displayed below the original input bars, one can clearly see there are two groups of numbers separated by the pivot element. When the user clicks on 'Divide' again (level 1), each of these partitions is treated as a whole array and the same process is repeated, where a pivot is chosen, the numbers are rearranged, and new row of rectangular bars are drawn with all the pivots highlighted. Partitioning is possible as long as there is at least one subarray which has two or more elements in it. Partitioning stops when all the elements are chosen as pivot elements or there is just one element in each new partition. At this point the 'Divide' button is disabled and only 'Solve' button would still be enabled.

Clicking 'Solve' button at any point generates the solution from the partitions alreadt created. If it is clicked before 'Divide', then the web-app displays the final sorted array directly as there were no partitions created. When it is clicked after all the divide operations, then as the array was already sorted, it displays the same rectangular bars on the right hand side of the screen. As the array was already sorted, the solve button does nothing special here. At this point, the 'Solve' button is disabled and 'Conquer' button gets enabled. This is a but peculiar case, as when the last step of divide is reached, then the solution is actually obtained. But inorder to show how divide and conquer is applied, we separate the pivot elements with more space and a different colour in the divide phase and then revert them to grey colour and reduce the space at different levels in the conquer phase. When the user clicks on 'Conquer' the pivots selected in the corresponding divide step will be changed back to grey level and their gap will be reduced and the whole array is shown once again. So as the user clicks on 'Conquer' further, the pivots are removed one by one and at the last conquer step, the array will be shown in the fully sorted order with all grey bars meaning all the pivots are removed and that solution is perfectly sorted. 

To let the user know what happened at each step, there is a logs functionality. It displays the action that the user took and also shows the computational result that the computer perfoemed such as displaying which element was chosen as the pivot, what were the three numbers whose median turned out to be the pivot element. It also lists the insertion and deletion of numbers into the arrayin the logs so that the user is informed what action was performed. Then it also informs the user at what time the divide phase is complete. During the conquer phase, it lets the user know theough logs the partitions across which pivots were merged and also informs the user of the final conquer step where the array is successfully sorted. 

Not all users may be very well versed with quicksort. Hence to familiarise the users with quicksort and other functionalities of the web-app, there is an FAQs section as well. Clicking it gived the users informtion about quicksort, how the pivot os chosen in this case, how exactly is divide and conquer applied here and so on. It also explains about the different coloured bars and a few functionalities of the site such as different buttons, logs etc. Apart from that, there is also a 'Guide Me!' section which starts displaying the tooltips for the users regarding different buttons present on screen. They can navigate the tips in their own pace by using the left and right arrow depicting previous and next tups respectively. There is also a x button to close the tips fully. The tips also get closed when the user clicks on right arrow on the last tip. These tips can be invoked at any point in the execution of the program as it is important for the user to know what each button does to understand the tool fully. 

